@model Translate.Models.Translation

@{
    ViewBag.Title = "Translate ^^";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.text, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.text, new { htmlAttributes = new { @class = "form-control", @id = "inputField" } })
            @Html.ValidationMessageFor(model => model.text, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="translateForm" value="Create" class="btn btn-default" style= "display: none;"/>
        </div>
    </div>

    <div>
        <input type='button' value='Translate' onclick='window.location = "@Url.Action("Submit", "Home")";' style="position: fixed;left: 50%;transform: translate(-50%, -50%);"/>
    </div>

    <label>
        Translated Text:
    </label> @ViewBag.translatedText

    <script>
        var time = 3000;
        var timeoutHandle = null;

        function startTimeout() {
            timeoutHandle = setTimeout(function () {
                document.getElementById("translateForm").click();
            }, time);
        }

        document.getElementById("inputField").onkeyup = function () {
            var text = document.getElementById('inputField').value;
            $.post('/Home/SetCurrentText',
                { key: text}, function (data) {
                });

            if (timeoutHandle == null) {
                startTimeout();
                return;
            }
            window.clearTimeout(timeoutHandle);
            startTimeout();
        };
    </script>
</div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}